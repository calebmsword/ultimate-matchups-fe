# adpated from https://github.com/qswitcher/cloudformation_examples/blob/master/create_react_app.yml
#   using the guid from https://medium.com/@jeffreyrussom/react-continuous-deployments-with-aws-codepipeline-f5034129ff0e

AWSTemplateFormatVersion: 2010-09-09
Parameters:
  GithubOwner:
    Type: String
    Default: calebmsword
    Description: "Github repo owner"
  GithubRepo:
    Type: String
    Default: ultimate-matchups-fe
    Description: 'Github repo name'
  GithubOAuthToken:
    Type: String
    # you will define this parameter when you create the stack in the AWS console
    Description: "Github personal access token"
  GithubBranch:
    Type: String
    Default: main
    Description: "Github branch name"

Resources:
  #=============================================================================
  # S3 Bucket for website deployment
  #=============================================================================
  UmFeProdDeployBucket:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: "ultimatematchups.com"
      WebsiteConfiguration:
        IndexDocument: index.html

  #=============================================================================
  # bucket policy for deployment bucket
  #=============================================================================
  # UmFeProdDeployBucketPolicy:
  #   Type: AWS::S3::BucketPolicy
  #   Properties:
  #     Bucket: !Ref UmFeProdDeployBucket
  #     PolicyDocument:
  #       #Version: "2012-10-17" # I think this is not necessary
  #       Statement:
  #         -
  #           Sid: "PublicReadGetObject",
  #           Effect: "Allow",
  #           Principal: "*",
  #           Action":
  #             - "s3:GetObject"
  #           Resource:
  #             - !GetAtt UmFeProdDeployBucket.Arn
  #             - !Join ['', [!GetAtt UmFeProdDeployBucket.Arn, "/*"]]

  #=============================================================================
  # CDN using CloudFront
  #=============================================================================
  Distribution:
    Type: "AWS::CloudFront::Distribution"
    Properties:
      DistributionConfig:
        Origins:
          -
            # Use UmFeProdDeployBucket as CDN origin
            DomainName: !GetAtt UmFeProdDeployBucket.DomainName
            Id: !Ref UmFeProdDeployBucket
            S3OriginConfig:
              OriginAccessIdentity: ''
        DefaultRootObject: index.html
        Enabled: true
        # Configure the caching behavior for our CDN
        DefaultCacheBehavior:
          MinTTL: 86400 # 1 day
          MaxTTL: 31536000 # 1 year
          ForwardedValues:
            QueryString: true
          TargetOriginId: !Ref UmFeProdDeployBucket
          ViewerProtocolPolicy: "redirect-to-https" # force HTTPS
  
  #=============================================================================
  # CodeBuild Spec
  # we don't CodeDeploy, we deploy the application in the post_build phase :p
  #=============================================================================
  CodeBuild:
    Type: 'AWS::CodeBuild::Project'
    Properties:
      Name: !Sub ${AWS::StackName}-CodeBuild
      ServiceRole: !GetAtt CodeBuildRole.Arn
      Artifacts:
        # The download source code for the build will come from CodePipeline
        Type: CODEPIPELINE
        Name: ultimate-matchups-fe-production-pipeline-artifact
      Source:
        Type: CODEPIPELINE
      Environment:
        # Linux container with node installed
        ComputeType: BUILD_GENERAL1_SMALL
        Type: LINUX_CONTAINER
        # https://github.com/qswitcher/cloudformation_examples/blob/master/create_react_app.yml uses the following:
        #Image: "aws/codebuild/nodejs:8.11.0"
        # But npm run build throws errors because the version of node needs to be at least 10x for current versions of create-react-app. I install a later version of node in the BuildSpec, but runtime-versions is not supported for the image they chose in the yml file from the github link.
        Image: "aws/codebuild/standard:5.0"
      Source:
        Type: CODEPIPELINE
        # what follows is what would be put in a codebuild.yml file
        BuildSpec: !Sub |
          version: 0.2
          phases:
            install:
              runtime-versions:
                nodejs: 14
            pre_build:
              commands:
                - echo installing source NPM dependencies...
                - npm install
            build:
              commands:
                - echo Build started on `date`
                - npm run build
            post_build:
              on-failure: CONTINUE
              commands:
                # copy contents of /build to s3 production deployment bucket
                - aws s3 cp --recursive --acl public-read ./build s3://${UmFeProdDeployBucket}/
                # set the cache-control headers for service-worker.js to prevent browser caching; We don't have a service-worker.js though, so I leave this uncommented
                # - aws s3 cp --acl public-read --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./build/service-worker.js s3://${UmFeProdDeployBucket}/ 
                # set the cache-control headers for index.html to prevent browser caching
                - aws s3 cp --acl public-read --cache-control="max-age=0, no-cache, no-store, must-revalidate" ./build/index.html s3://${UmFeProdDeployBucket}/
                # invalidate the CloudFront cache for index.html and service-worker.js to force CloudFront to update its edge locations with the new versions
                - aws cloudfront create-invalidation --distribution-id ${Distribution} --paths /index.html /service-worker.js
          artifacts:
            files:
              - '**/*'
            base-directory: build
  
  #=============================================================================
  # IAM role that allows CodeBuild to interact with S3, CloudWatch, and CloudFront
  #=============================================================================
  CodeBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - "codebuild.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Path: /service-role/
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectAcl"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource:
                  - !GetAtt UmFeProdPipelineBucket.Arn
                  - !Join ['', [!GetAtt UmFeProdPipelineBucket.Arn, "/*"]]
              -
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectAcl"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                  - "s3:PutObjectAcl"
                Resource:
                  - !GetAtt UmFeProdDeployBucket.Arn
                  - !Join ['', [!GetAtt UmFeProdDeployBucket.Arn, "/*"]]
              -
                Effect: Allow
                Action:
                  - "logs:CreateLogGroup"
                  - "logs:CreateLogStream"
                  - "logs:PutLogEvents"
                  - "cloudfront:CreateInvalidation"
                Resource:
                  - "*"
  
  #=============================================================================
  # CodePipeline Spec
  #=============================================================================
  CodePipeline:
    Type: 'AWS::CodePipeline::Pipeline'
    Properties:
      RoleArn: !GetAtt CodePipeLineRole.Arn
      ArtifactStore:
        Location: !Ref UmFeProdPipelineBucket
        Type: S3
      Stages:
        -
          Name: Source
          Actions:
            -
              Name: SourceAction
              ActionTypeId:
                Category: Source
                Owner: ThirdParty
                Provider: GitHub
                Version: 1
              OutputArtifacts:
                -
                  Name: UltimateMatchupsFEArtifact
              Configuration:
                Owner: !Ref GithubOwner
                Repo: !Ref GithubRepo
                Branch: !Ref GithubBranch
                OAuthToken: !Ref GithubOAuthToken
        -
          Name: Build
          Actions:
            - 
              Name: BuildAction
              ActionTypeId:
                Category: Build
                Owner: AWS
                Version: 1
                Provider: CodeBuild
              InputArtifacts:
                -
                  Name: UltimateMatchupsFEArtifact
              OutputArtifacts:
                -
                  Name: UltimateMatchupsFEBuildArtifact
              Configuration:
                ProjectName: !Ref CodeBuild
 
  #=============================================================================
  # IAM role for pipeline
  #=============================================================================
  CodePipeLineRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          -
            Effect: Allow
            Principal:
              Service:
                - "codepipeline.amazonaws.com"
            Action:
              - "sts:AssumeRole"
      Policies:
        - PolicyName: root
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              -
                Effect: Allow
                Action:
                  - "s3:GetObject"
                  - "s3:GetObjectVersion"
                  - "s3:GetBucketVersioning"
                  - "s3:PutObject"
                Resource:
                  - !GetAtt UmFeProdPipelineBucket.Arn
                  - !Join ['', [!GetAtt UmFeProdPipelineBucket.Arn, "/*"]]
              -
                Effect: Allow
                Action:
                  - "codebuild:BatchGetBuilds"
                  - "codebuild:StartBuild"
                Resource: "*"
  
  #=============================================================================
  # S3 Bucket for Pipeline to store build artifacts
  #=============================================================================
  UmFeProdPipelineBucket:
    Type: 'AWS::S3::Bucket'
    Properties: {}